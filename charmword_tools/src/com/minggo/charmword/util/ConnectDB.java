package com.minggo.charmword.util;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;

/**
 * 数据库连接类
 * 
 * @author minggo
 * @created 2014-7-20下午04:36:28
 */
public class ConnectDB {

	public Connection getConnectDB() {

		Connection conn = null;
		String user = null;
		String password = null;
		String driver = null;
		String url = null;

		try {
			Properties properties = new Properties();
			InputStream in = getClass().getResourceAsStream("/database.properties");
			properties.load(in);
			user = properties.getProperty("user");
			password = properties.getProperty("pwd");
			driver = properties.getProperty("driver");
			url = properties.getProperty("url");
			Class.forName(driver);
			conn = DriverManager.getConnection(url, user, password);
			//System.out.println("数据库连接成功");
		} catch (ClassNotFoundException e) {
			System.out.println("加载驱动不成功");
			e.printStackTrace();
		} catch (SQLException e) {
			System.out.println("数据库连接失败");
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

		return conn;
	}

	/*
	 * 由于 PreparedStatement 对象已预编译过，所以其执行速度要快于 Statement 对象。 因此，多次执行的 SQL
	 * 语句经常创建为 PreparedStatement 对象，以提高效率。
	 */
	public PreparedStatement preparestmt(Connection conn, String sql) {
		PreparedStatement pstmt = null;
		try {
			pstmt = conn.prepareStatement(sql);
			//System.out.println("与表成功连接");
		} catch (SQLException e) {
			System.out.println("与表连接失败");
			e.printStackTrace();
		} finally {
			// closeConnection(conn);
		}
		return pstmt;
	}

	// 获得自动生成的主键值(autoGeneratedKeys)
	public PreparedStatement preparestmt(Connection conn, String sql, int autoGeneratedKeys) {
		PreparedStatement pstmt = null;
		try {
			pstmt = conn.prepareStatement(sql, autoGeneratedKeys);
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			// closeConnection(conn);
		}
		return pstmt;
	}

	public void closeConnection(Connection conn) {
		try {
			if (conn != null) {
				conn.close();
				conn = null;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public void closePreparedStatement(PreparedStatement pstmt) {

		try {
			if (pstmt != null) {
				pstmt.close();
				pstmt = null;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public void closeResultSet(ResultSet rs) {
		try {
			if (rs != null) {
				rs.close();
				rs = null;
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	/**
	 * 测试数据的读取
	 * 
	 * @param agrs
	 */
	public static void main(String agrs[]) {
		String sql = "select * from word";
		ConnectDB dd = new ConnectDB();
		Connection conn = dd.getConnectDB();
		PreparedStatement pstmt = dd.preparestmt(conn, sql);

		ResultSet rs = null;
		try {
			rs = pstmt.executeQuery();
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
		try {
			while (rs.next()) {
				String name = rs.getString("word");
				System.out.println(name);

			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
}
